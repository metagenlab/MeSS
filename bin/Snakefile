include: "simulate_reads.rules"


replicates = list(range(1, config["replicates"] + 1))
community_name = config["community_name"]
read_direction = []
if config["seq_tech"] != "illumina":
    read_direction = config["seq_tech"]
if config["seq_tech"] == "illumina" and config["read_status"] == "single":
    read_direction = "single"
if config["seq_tech"] == "illumina" and config["read_status"] == "paired":
    read_direction = ["R1", "R2"]


checkpoint download_assemblies:
    input:
        config["input_table_path"],
    output:
        f"{community_name}/assembly_summary.tsv",
    params:
        ncbi_key=config["NCBI_key"],
        ncbi_email=config["NCBI_email"],
        complete_assemblies=config["complete_assemblies"],
        filter_rank=config["Rank_to_filter_by"],
        prefix=f"{community_name}",
    shell:
        """
        assembly_finder -i {input} -o {params.prefix} -nk {params.ncbi_key} -ne {params.ncbi_email}
        """


def assembly_and_bam_list(wildcards):
    try:
        directory = config["assemblies_dir"]
        files = glob.glob(os.path.join(directory, "*_genomic.fna*"))
        assemblynames = [file.split("/")[-1].split("_genomic.fna")[0] for file in files]
        assemblies = expand(
            f"assembly_gz/{community_name}/{{i}}_genomic.fna", i=assemblynames
        )
    except KeyError:
        checkpoint_directory = f"assembly_gz/{community_name}/"
        assemblynames = glob_wildcards(
            os.path.join(checkpoint_directory, "{i}_genomic.fna.gz")
        ).i
        assemblies = expand(
            f"assembly_gz/{community_name}/{{i}}_genomic.fna.gz", i=assemblynames
        )

    if config["bam"]:
        bam = expand(
            f"bam/{community_name}-{{rep}}-{{i}}.bam", i=assemblynames, rep=replicates
        )
        all = bam + assemblies
    else:
        all = assemblies
    print("ALL", all)
    return all


rule all_sim:
    input:
        expand(
            "simreads/{community}-{rep}_{rd}.fq.gz",
            community=community_name,
            rep=replicates,
            rd=read_direction,
        ),
        expand(
            "taxonomy-{community}-{rep}_{rd}.tsv",
            community=community_name,
            rep=replicates,
            rd=read_direction,
        ),
        expand(
            "readcounts-{community}-{rep}.tsv",
            community=community_name,
            rep=replicates,
        ),
        expand(
            "krona/{community}-{rep}_{rd}.html",
            community=community_name,
            rep=replicates,
            rd=read_direction,
        ),
        assembly_and_bam_list,
