name: Tests

on:
  push:
    branches: ["main"]
    paths:
      - ".github/workflows/unit-tests.yml"
      - "tests/**"
      - "mess/**"
      - "setup.py"
  pull_request:
    branches: ["main"]
    paths:
      - ".github/workflows/unit-tests.yml"
      - "tests/**"
      - "mess/**"
      - "setup.py"

permissions:
  contents: read

jobs:
  linux:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: false
    name: Linux Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: "latest"
          miniforge-variant: Mambaforge
          use-mamba: true
          mamba-version: "*"
          channels: conda-forge,bioconda,defaults
          channel-priority: strict
          activate-environment: mess
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - name: "Test and generate coverage report for Linux python ${{ matrix.python-version }}"
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest coverage
          python -m pip install .
          coverage run -m pytest

  osx:
    runs-on: "macos-latest"
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        python-version: ["3.12"]
        architecture: ["x64"]
      fail-fast: false
    name: OSX Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: "latest"
          miniforge-variant: Mambaforge
          use-mamba: true
          mamba-version: "*"
          channels: conda-forge,bioconda,defaults
          channel-priority: strict
          activate-environment: mess
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - name: "Test and generate coverage report for OSX python ${{ matrix.python-version }}"
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest coverage
          python -m pip install .
          coverage run -m pytest
